#!/usr/bin/env node
var program = require('commander');
var mkdirp = require('mkdirp')
var path = require('path');
var fs = require('fs');
var readline = require('readline');

main();

function main(){
    program
      .version('0.0.1')
      .option('-p,--port','port')
      .parse(process.argv)
    var destinationPath = '.';  //项目名称
    console.log(program.args)
    createApp(destinationPath)
}
function createApp(app_name,path){

    mkdir(app_name,function(){
        console.log('项目构建开始 ...')
        mkdir(app_name+'/public');
        mkdir(app_name+'/public/js');
        mkdir(app_name+'/public/css');
        mkdir(app_name+'/public/less');
        mkdir(app_name+'/public/static');

        var app = loadTemplate('./index.js');
        if(program.port) app = app.replace('9000',program.args[0])
        var gulp = loadTemplate('./gulpfile.js');
        var webpack = loadTemplate('./webpack.config.js');
        var index = loadTemplate('./index.html');
        var gitignore = loadTemplate('./.gitignore');
        write('./index.html',index)
        write('./index.js',app)
        write('./gulpfile.js',gulp)
        write('./webpack.config.js',webpack)
        write('./index.js',app)
        write('./.gitignore',gitignore)

        write('./public/js/global.js')
        write('./public/css/global.css')
        write('./public/less/global.less')

        var appname = process.argv[1].split('/');
        appname =  appname[appname.length-1];
        var pkg = {
            name:appname,
            version: '0.0.0',
            private: true,
            scripts: { start: 'node ./index' },
            dependencies: {
                'node-static': "^0.7.7",
                'supervisor':'^0.9.1'
          }
        }
        pkg = JSON.stringify(pkg,null,4);
        write('./package.json',pkg);
    })
}

var isFinish = 6;
function finish(){
    if(--isFinish) return;
    console.log();
    console.log('项目构建结束 ...')
}

function loadTemplate(name) {
  return fs.readFileSync(path.join(__dirname, '..', 'templates', name), 'utf-8');
}

function write(path, str,mode) {
  fs.writeFileSync(path, str,{ mode: mode || 0666 });
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}

function mkdir(path,fn){
    mkdirp(path,0755,function(err){
        if(err) throw err;
        console.log('   \x1b[36mcreate\x1b[0m : '+path);
        fn && fn();
        finish();
    })
}
